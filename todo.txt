repository organisation:
- create a python env and run python files from env
- create python env requirements file and update requirements installation in README.md
- update c++ packages requirements in README.md
- update citations on code files
- remove unnecessary headers and info
- add file purpose headers

pose_estimation:
- change the webcam name instead of dynamic number
- better logic for ProjectGoalPose?
- draw yaw angle directions and range (-pi to pi)

new python package:
- implement ov object detection to obtain obstacles bounding boxes and segment manipulating object

optimizer/gtsam:
- Fix goalpose and T0 sharing btw pose_estimation and optimizer
- record code for experiments 
- change gactor graph to consider obstacles bounding boxes from BBOX
- contruct fg for switch mode trajectories
- check time for translation/rotation
- check ensure angle range
- Complete optimizer.h code

action-planning/vlm_model:
- ToDo: TIMING/ DESCRITIZATION OF PATH/ when to query VLM?
- VLM call: 
    - robot always faces normal to object. Compare manipulation direction with positioning of robots around objects and the resultant force. Action switch required? 
    - define high level switch_contact_points actions: right-centre, right-left, right-right, left-centre, left-left, left-right
    - How to asses scene obstacles/weight/friction into account?

- Low level controller each hl actions? 
        - use Box 60.2*65.2 dimension to generate switch_contacts action trajectory->velocity commands.
        - ROS2 cmd_vel with constant vel (1.0) and sleep (Ts_translation). Test how long does the specific box move.

experiments:
- small object (box, t, rectangle, barral: all with different weight)
